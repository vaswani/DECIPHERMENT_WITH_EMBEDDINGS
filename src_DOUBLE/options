      case i: input = optarg; break;
      case r: is_reverse = 1; break;
      case I: ITERATIONS = atoi(optarg); break;
      case d: favor_diagonal = 1; break;
      case p: prob_align_null = atof(optarg); break;
      case T: diagonal_tension = atof(optarg); break;
      case o: optimize_tension = 1; break;
      case v: variational_bayes = 1; break;
      case m: vanilla_m_step = 1; break;
      case a: alpha = atof(optarg); break;
      case N: no_null_word = 1; break;
      case c: conditional_probability_filename = optarg; break;
      case h: hidden_layer_size = atoi(optarg); break;
      case b: minibatch_size = atoi(optarg); break;
      case B: validation_minibatch_size = atoi(optarg); break;
      case t: test_minibatch_size = atoi(optarg); break;
      case l: learning_rate = atof(optarg); break;
      case e: num_epochs= atoi(optarg); break;
      case q: input_embedding_dimension = atoi(optarg); break;
      case Q: output_embedding_dimension = atoi(optarg); break;
      case n: ngram_size = atoi(optarg); break;
      case s: input_vocab_size = atoi(optarg); break;
      case S: output_vocab_size = atoi(optarg); break;
      case k: num_noise_samples= atoi(optarg); break;
      case z: num_training_samples= atoi(optarg); break;
      case Z: num_validation_samples= atoi(optarg); break;
      case f: trg_vocab_file = optarg; break;
      case F: src_vocab_file = optarg; break;
      case M: use_mixture = 1; break;
      case P: neural_network_model = optarg; break;
      case u: num_threads = atoi(optarg); break;

